version: '3.9'

services:
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    ports:
      - 3000:3000
      - 8081:8081
    environment:
      - API_URL=http://localhost:4000
      - WS_URL=http://localhost:8080
    restart: always
    depends_on:
      - backend
  backend:
    container_name: backend
    image: backend
    restart: always
    depends_on:
      - kafka
      - zookeeper
    build:
      context: ./backend
      dockerfile: backend.dockerfile
    ports:
      - 4000:4000
      - 8080:8080
      - 5555:5555
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres?schema=public
  db:
    container_name: db
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
        KAFKA_MIN_INSYNC_REPLICAS: "1"

volumes:
  pgdata: {}